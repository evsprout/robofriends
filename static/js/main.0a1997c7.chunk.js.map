{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","id","alt","name","email","CardList","robots","cardComponent","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","console","log","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAceA,EAZF,SAACC,GACZ,OACE,sBAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAAMG,GAAhC,YAA8CC,IAAI,WAC1D,gCACE,6BAAKJ,EAAMK,OACX,4BAAIL,EAAMM,eCaHC,EAlBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACZC,EAAgBD,EAAOE,KAAI,SAACC,EAAMC,GACtC,OACE,cAAC,EAAD,CAEAT,GAAIK,EAAOI,GAAGT,GACdE,KAAMG,EAAOI,GAAGP,KAChBC,MAAOE,EAAOI,GAAGN,OAHZE,EAAOI,GAAGT,OAOnB,OACE,8BACGM,KCDQI,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC/B,OACE,qBAAKd,UAAU,MAAf,SACE,uBACAA,UAAU,mCACVe,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCDI,EARA,SAACnB,GACd,OACE,qBAAKoB,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACGvB,EAAMwB,YCkBEC,E,kDApBb,WAAYzB,GAAQ,IAAD,8BACjB,cAAMA,IACD0B,MAAQ,CACXC,UAAU,GAHK,E,qDAOnB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG5B,WACE,OAAIG,KAAKJ,MAAMC,SACN,0FAEAG,KAAK9B,MAAMwB,a,GAhBGQ,aCyDZC,E,kDAlDb,aAAe,IAAD,8BACZ,gBAqBFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAEjB,YAAaqB,EAAMC,OAAOC,SArB1C,EAAKX,MAAQ,CACXlB,OAAQ,GACRM,YAAa,IAEfwB,QAAQC,IAAI,eANA,E,qDASd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAAAC,GACJ,OAAOA,EAASC,UAEjBF,MAAK,SAAAG,GACJ,EAAKb,SAAS,CAAEvB,OAAQoC,OAI5BN,QAAQC,IAAI,uB,oBAOd,WACE,MAAgCT,KAAKJ,MAA7BlB,EAAR,EAAQA,OAAQM,EAAhB,EAAgBA,YACV+B,EAAiBrC,EAAOsC,QAAO,SAAAC,GACnC,OAAOA,EAAM1C,KAAK2C,cAAcC,SAASnC,EAAYkC,kBAGvD,OADAV,QAAQC,IAAI,UACU,IAAlB/B,EAAO0C,OACF,oBAAIjD,UAAU,KAAd,wBAGL,sBAAKA,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWc,aAAce,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAU1B,OAAQqC,e,GA1CdM,IAAMnB,WCIToB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0a1997c7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n      <img src={`https://robohash.org/${props.id}?200x200`} alt='robots' />\r\n      <div>\r\n        <h2>{props.name}</h2>\r\n        <p>{props.email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n  const cardComponent = robots.map((user, i) => {\r\n    return (\r\n      <Card \r\n      key={robots[i].id}\r\n      id={robots[i].id} \r\n      name={robots[i].name} \r\n      email={robots[i].email} \r\n      />\r\n    );\r\n  })\r\n  return (\r\n    <div>\r\n      {cardComponent}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n  return (\r\n    <div className='pa2'>\r\n      <input \r\n      className='pa3 ba b--green bg-lightest-blue'\r\n      type='search' \r\n      placeholder='search robots'\r\n      onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{overflowY: 'scroll', border: '5px solid black', height: '800px'}}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false\r\n    }\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Oops! This is not good... an error has been encountered!</h1>\r\n    } else {\r\n      return this.props.children\r\n    }\r\n  }\r\n}\r\n\r\nexport default ErrorBoundry;","import './App.css';\nimport React from 'react';\nimport CardList from '../components/CardList';\n// import { robots } from './robots';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      robots: [],\n      searchfield: ''\n    }\n    console.log('constructor');\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => {\n        return response.json();\n      })\n      .then(users => {\n        this.setState({ robots: users})\n      });\n\n    // this.setState({ robots: robots});\n    console.log('componentDidMount');\n  }\n\n  onSearchChange = (event) => {\n    this.setState({ searchfield: event.target.value})\n  }\n\n  render() {\n    const { robots, searchfield } = this.state;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n    })\n    console.log('render');\n    if (robots.length === 0) {\n      return <h1 className='tc'>Loading...</h1>\n    } else {\n      return (\n        <div className='tc'>\n          <h1 className='f1'>RoboFriends</h1>\n          <SearchBox searchChange={this.onSearchChange} />\n          <Scroll>\n            <ErrorBoundry>\n              <CardList robots={filteredRobots} />\n            </ErrorBoundry>\n          </Scroll>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}